# Copyright 2016 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=amls-notification

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="WPlVxIW4BicDrNKU16zne2PBoexBdh1LXuKdfnZOoVk02DoyECB26jqYPoFW5LcB"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = config.AmlsGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    confidenceLevel = 50

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

    controllers.ViewNotificationController = {
      needsAuth = true
      needsLogging = true
      needsAuditing = true
      authParams {
        pattern = "/amls-notification/[^/]+/([\\w]+)/([^/]+)/?.*"
      }
    }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

# Microservice specific uk.gov.hmrc.amls.microservice.config

Dev {

    mongodb {
        uri = "mongodb://localhost:27017/amls-notification"
    }

    auditing {
        enabled=true
        traceRequests=true

        consumer {
            baseUri {
                host = localhost
                port = 8100
            }
        }
    }

    microservice {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.${appName}.
                enabled = false
            }
        }

        services {
            timeout = 5 seconds

            delay-response = 2 seconds

            protocol=http

            auth {
                host=localhost
                port=8500
            }

            datastream {
                host=localhost
                port=8100
            }

            des {
                host = localhost
                port = 8941
                env = ist0
                auth-token = aaaaa
            }

            government-gateway-admin {
                host = localhost
                port = 9936
            }
        }
    }
}

Prod {

    auditing {
        consumer {
            baseUri {
                host = datastream.service
                port = 80
            }
        }
    }

    mongodb {
        uri = "mongodb://dev-app-db-1:27017,dev-app-db-2:27017,dev-app-db-3:27017/amls-notification"
    }

    microservice {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.${appName}.
                enabled = true
            }
        }

        services {
            timeout = 30 seconds

            auth {
                host=auth.service
                port=80
            }

            datastream {
                host=datastream.service
                port=80
                enabled=true
                traceRequests=true
            }

            des {
                host=hods-proxy
                port=80
                env = ist0
                auth-token = aaaaa
            }

            government-gateway-admin {
                host = government-gateway-admin.service
                port = 80
            }
        }
    }
}

Test = ${Dev}
